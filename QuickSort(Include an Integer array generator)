import java.util.Random;
import java.util.Scanner;
//Quick sort implementation: top down 


public class QuickSort {
	public static void quickSort(int[] array) {
		 qs(array,0,array.length-1);
	}	
	public static void qs(int[] array,int l, int r) {
		if(l==r) {				// if l==r. Only one element, we do nothing.
			return ;
		}
		if(l<r) {					// if l<r. we can start partition. 
			int x =array[r];		// we iterate from the beginning of array l, to r-1.
			int i=l-1;		
			
			for(int j=l;j<=r-1;j++) {
				if(array[j]<=x) {
					i++;				// if we find element j that is smaller that array[r].
										// we increase i by 1 (i is initialized to 0), and switch array[j] with array[i]
					swap(array,i,j);    // we keep doing this until we reach to array[r-1]
				}						
			}							
										
			
			swap(array,i+1,r);		//  Then we switch array[r] with array[i+1]. All the element before i (include i) are  <=array[i+1]
									// All the element after i+1(starting from i+2) are bigger than array[i+1]
			qs(array,l,i);		   // Then we do quick sort on array(index l to i) and array(index i+2 to r )
			qs(array,i+2,r);	   // we do not need to include array[i+1] since it is the middle of the two portion of array.
		}
		
	}

	static void swap(int[] array, int i, int j) {
		  int temp = array[i];
		  array[i] = array[j];
		  array[j] = temp;
		}
	
	
	
	public static int[] generateRandomArray(int n){
	    int a[]=new int[n];
	    Random random = new Random();

	    for (int i = 0; i < n; i++)
	    {
	        a[i]=random.nextInt(20);
	    }
	   
	   return a;
	}  
	public static void main(String args[]) {
		Scanner input= new Scanner(System.in);
		System.out.println("Enter the array size: ");
		int n = input.nextInt();
		int a[]=generateRandomArray(n);
		 for (int i = 0; i < n; i++)
		    {
		        System.out.print(a[i]+" ");
		        
		    } 
		 System.out.println();
		 quickSort(a);
		 for (int i = 0; i < n; i++)
		   {
		        System.out.print(a[i]+" ");
		        
		   }
		
	}	
}
